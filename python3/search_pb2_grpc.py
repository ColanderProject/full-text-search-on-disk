# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import search_pb2 as search__pb2


class SearchServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.URL2ID = channel.unary_unary(
                '/SearchService/URL2ID',
                request_serializer=search__pb2.URL.SerializeToString,
                response_deserializer=search__pb2.DocID.FromString,
                )
        self.GetMaxURL = channel.unary_unary(
                '/SearchService/GetMaxURL',
                request_serializer=search__pb2.GetMaxURLRequest.SerializeToString,
                response_deserializer=search__pb2.DocID.FromString,
                )
        self.GetDocumentHeader = channel.unary_unary(
                '/SearchService/GetDocumentHeader',
                request_serializer=search__pb2.DocID.SerializeToString,
                response_deserializer=search__pb2.Document.FromString,
                )
        self.GetDocumentHeaderByURL = channel.unary_unary(
                '/SearchService/GetDocumentHeaderByURL',
                request_serializer=search__pb2.URL.SerializeToString,
                response_deserializer=search__pb2.Document.FromString,
                )
        self.GetChildDocument = channel.unary_unary(
                '/SearchService/GetChildDocument',
                request_serializer=search__pb2.DocumentRequest.SerializeToString,
                response_deserializer=search__pb2.DocList.FromString,
                )
        self.GetMode = channel.unary_unary(
                '/SearchService/GetMode',
                request_serializer=search__pb2.GetModeRequest.SerializeToString,
                response_deserializer=search__pb2.ServerState.FromString,
                )
        self.SetMode = channel.unary_unary(
                '/SearchService/SetMode',
                request_serializer=search__pb2.ServerState.SerializeToString,
                response_deserializer=search__pb2.SetModeResponse.FromString,
                )
        self.DeleteDocument = channel.unary_unary(
                '/SearchService/DeleteDocument',
                request_serializer=search__pb2.DocID.SerializeToString,
                response_deserializer=search__pb2.DeleteResponse.FromString,
                )
        self.InsertDocument = channel.unary_unary(
                '/SearchService/InsertDocument',
                request_serializer=search__pb2.InsertRequest.SerializeToString,
                response_deserializer=search__pb2.InsertResponse.FromString,
                )
        self.UpdateDocument = channel.unary_unary(
                '/SearchService/UpdateDocument',
                request_serializer=search__pb2.UpdateRequest.SerializeToString,
                response_deserializer=search__pb2.UpdateResponse.FromString,
                )
        self.SearchForDocId = channel.unary_unary(
                '/SearchService/SearchForDocId',
                request_serializer=search__pb2.SearchRequest.SerializeToString,
                response_deserializer=search__pb2.DocumentIdList.FromString,
                )
        self.SearchForHeader = channel.unary_unary(
                '/SearchService/SearchForHeader',
                request_serializer=search__pb2.SearchRequest.SerializeToString,
                response_deserializer=search__pb2.DocHeaderList.FromString,
                )
        self.SearchForDocument = channel.unary_unary(
                '/SearchService/SearchForDocument',
                request_serializer=search__pb2.SearchRequest.SerializeToString,
                response_deserializer=search__pb2.DocList.FromString,
                )
        self.DoCompact = channel.unary_unary(
                '/SearchService/DoCompact',
                request_serializer=search__pb2.DoCompactRequest.SerializeToString,
                response_deserializer=search__pb2.GeneralResponse.FromString,
                )
        self.UpdateIndex = channel.unary_unary(
                '/SearchService/UpdateIndex',
                request_serializer=search__pb2.UpdateIndexRequest.SerializeToString,
                response_deserializer=search__pb2.GeneralResponse.FromString,
                )


class SearchServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def URL2ID(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMaxURL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentHeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentHeaderByURL(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChildDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetMode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InsertDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchForDocId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchForHeader(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchForDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DoCompact(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateIndex(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SearchServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'URL2ID': grpc.unary_unary_rpc_method_handler(
                    servicer.URL2ID,
                    request_deserializer=search__pb2.URL.FromString,
                    response_serializer=search__pb2.DocID.SerializeToString,
            ),
            'GetMaxURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMaxURL,
                    request_deserializer=search__pb2.GetMaxURLRequest.FromString,
                    response_serializer=search__pb2.DocID.SerializeToString,
            ),
            'GetDocumentHeader': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentHeader,
                    request_deserializer=search__pb2.DocID.FromString,
                    response_serializer=search__pb2.Document.SerializeToString,
            ),
            'GetDocumentHeaderByURL': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentHeaderByURL,
                    request_deserializer=search__pb2.URL.FromString,
                    response_serializer=search__pb2.Document.SerializeToString,
            ),
            'GetChildDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChildDocument,
                    request_deserializer=search__pb2.DocumentRequest.FromString,
                    response_serializer=search__pb2.DocList.SerializeToString,
            ),
            'GetMode': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMode,
                    request_deserializer=search__pb2.GetModeRequest.FromString,
                    response_serializer=search__pb2.ServerState.SerializeToString,
            ),
            'SetMode': grpc.unary_unary_rpc_method_handler(
                    servicer.SetMode,
                    request_deserializer=search__pb2.ServerState.FromString,
                    response_serializer=search__pb2.SetModeResponse.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=search__pb2.DocID.FromString,
                    response_serializer=search__pb2.DeleteResponse.SerializeToString,
            ),
            'InsertDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.InsertDocument,
                    request_deserializer=search__pb2.InsertRequest.FromString,
                    response_serializer=search__pb2.InsertResponse.SerializeToString,
            ),
            'UpdateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocument,
                    request_deserializer=search__pb2.UpdateRequest.FromString,
                    response_serializer=search__pb2.UpdateResponse.SerializeToString,
            ),
            'SearchForDocId': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchForDocId,
                    request_deserializer=search__pb2.SearchRequest.FromString,
                    response_serializer=search__pb2.DocumentIdList.SerializeToString,
            ),
            'SearchForHeader': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchForHeader,
                    request_deserializer=search__pb2.SearchRequest.FromString,
                    response_serializer=search__pb2.DocHeaderList.SerializeToString,
            ),
            'SearchForDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchForDocument,
                    request_deserializer=search__pb2.SearchRequest.FromString,
                    response_serializer=search__pb2.DocList.SerializeToString,
            ),
            'DoCompact': grpc.unary_unary_rpc_method_handler(
                    servicer.DoCompact,
                    request_deserializer=search__pb2.DoCompactRequest.FromString,
                    response_serializer=search__pb2.GeneralResponse.SerializeToString,
            ),
            'UpdateIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateIndex,
                    request_deserializer=search__pb2.UpdateIndexRequest.FromString,
                    response_serializer=search__pb2.GeneralResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SearchService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SearchService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def URL2ID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/URL2ID',
            search__pb2.URL.SerializeToString,
            search__pb2.DocID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMaxURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/GetMaxURL',
            search__pb2.GetMaxURLRequest.SerializeToString,
            search__pb2.DocID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDocumentHeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/GetDocumentHeader',
            search__pb2.DocID.SerializeToString,
            search__pb2.Document.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDocumentHeaderByURL(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/GetDocumentHeaderByURL',
            search__pb2.URL.SerializeToString,
            search__pb2.Document.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChildDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/GetChildDocument',
            search__pb2.DocumentRequest.SerializeToString,
            search__pb2.DocList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/GetMode',
            search__pb2.GetModeRequest.SerializeToString,
            search__pb2.ServerState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetMode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/SetMode',
            search__pb2.ServerState.SerializeToString,
            search__pb2.SetModeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/DeleteDocument',
            search__pb2.DocID.SerializeToString,
            search__pb2.DeleteResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InsertDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/InsertDocument',
            search__pb2.InsertRequest.SerializeToString,
            search__pb2.InsertResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/UpdateDocument',
            search__pb2.UpdateRequest.SerializeToString,
            search__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchForDocId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/SearchForDocId',
            search__pb2.SearchRequest.SerializeToString,
            search__pb2.DocumentIdList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchForHeader(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/SearchForHeader',
            search__pb2.SearchRequest.SerializeToString,
            search__pb2.DocHeaderList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SearchForDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/SearchForDocument',
            search__pb2.SearchRequest.SerializeToString,
            search__pb2.DocList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DoCompact(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/DoCompact',
            search__pb2.DoCompactRequest.SerializeToString,
            search__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SearchService/UpdateIndex',
            search__pb2.UpdateIndexRequest.SerializeToString,
            search__pb2.GeneralResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
